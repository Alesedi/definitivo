{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aless\\\\Desktop\\\\Da_zero\\\\fastApiProject\\\\frontend\\\\src\\\\pages\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Container, Section, Title, Subtitle, Text, Button, Grid, LoadingSpinner, Flex, Badge } from '../styles/components';\nimport MovieCard from '../components/MovieCard';\nimport { recommendationsAPI, ratingsAPI } from '../services/api';\nimport { FaSync, FaStar, FaFilm, FaHeart } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContainer = styled.div`\n  min-height: calc(100vh - 80px);\n  background: ${props => props.theme.colors.background};\n  padding: ${props => props.theme.spacing.xl} 0;\n`;\n_c = DashboardContainer;\nconst WelcomeSection = styled.div`\n  background: linear-gradient(135deg, ${props => props.theme.colors.primary}, ${props => props.theme.colors.primaryLight});\n  color: ${props => props.theme.colors.textWhite};\n  padding: ${props => props.theme.spacing.xl};\n  border-radius: ${props => props.theme.borderRadius.xl};\n  margin-bottom: ${props => props.theme.spacing.xl};\n  text-align: center;\n`;\n_c2 = WelcomeSection;\nconst StatsSection = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${props => props.theme.spacing.lg};\n  margin-bottom: ${props => props.theme.spacing.xl};\n`;\n_c3 = StatsSection;\nconst StatCard = styled.div`\n  background: ${props => props.theme.colors.surface};\n  padding: ${props => props.theme.spacing.lg};\n  border-radius: ${props => props.theme.borderRadius.lg};\n  box-shadow: ${props => props.theme.boxShadow.base};\n  text-align: center;\n  \n  .icon {\n    font-size: ${props => props.theme.fontSize['2xl']};\n    color: ${props => props.theme.colors.secondary};\n    margin-bottom: ${props => props.theme.spacing.sm};\n  }\n  \n  .number {\n    font-size: ${props => props.theme.fontSize['2xl']};\n    font-weight: ${props => props.theme.fontWeight.bold};\n    color: ${props => props.theme.colors.primary};\n    margin-bottom: ${props => props.theme.spacing.xs};\n  }\n`;\n_c4 = StatCard;\nconst FilterSection = styled(Flex)`\n  margin-bottom: ${props => props.theme.spacing.lg};\n  flex-wrap: wrap;\n  gap: ${props => props.theme.spacing.md};\n`;\n_c5 = FilterSection;\nconst RecommendationsHeader = styled(Flex)`\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${props => props.theme.spacing.lg};\n  flex-wrap: wrap;\n  gap: ${props => props.theme.spacing.md};\n`;\n_c6 = RecommendationsHeader;\nconst DashboardPage = ({\n  user\n}) => {\n  _s();\n  const [recommendations, setRecommendations] = useState([]);\n  const [userStats, setUserStats] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      // Prova prima a ottenere raccomandazioni ML\n      let recommendations = [];\n      let userStats = {};\n      try {\n        // Controlla stato del modello ML\n        const modelStatus = await recommendationsAPI.getModelStatus();\n        if (modelStatus.data.is_trained) {\n          // Usa raccomandazioni ML se il modello √® addestrato\n          const mlRecsResponse = await recommendationsAPI.getRecommendations(user.id, 20);\n          recommendations = mlRecsResponse.data.map(rec => ({\n            id: rec.tmdb_id,\n            title: rec.title,\n            genres: rec.genres.join('|'),\n            // Converti da array a stringa per compatibilit√†\n            poster_path: rec.poster_url ? rec.poster_url.replace('https://image.tmdb.org/t/p/w500', '') : null,\n            vote_average: rec.tmdb_rating || 0,\n            popularity: rec.predicted_rating * 20,\n            // Scala il rating predetto\n            recommendation_score: rec.predicted_rating\n          }));\n        } else {\n          // Fallback su raccomandazioni popolari\n          const popularResponse = await recommendationsAPI.getPopularRecommendations(20);\n          recommendations = popularResponse.data.map(rec => ({\n            id: rec.tmdb_id,\n            title: rec.title,\n            genres: rec.genres.join('|'),\n            poster_path: rec.poster_url ? rec.poster_url.replace('https://image.tmdb.org/t/p/w500', '') : null,\n            vote_average: rec.tmdb_rating || 0,\n            popularity: rec.predicted_rating * 20,\n            recommendation_score: rec.predicted_rating\n          }));\n        }\n\n        // Ottieni storico utente per statistiche\n        const historyResponse = await recommendationsAPI.getUserHistory(user.id);\n        userStats = {\n          total_votes: historyResponse.data.length,\n          average_rating: historyResponse.data.length > 0 ? historyResponse.data.reduce((sum, item) => sum + item.rating, 0) / historyResponse.data.length : 0,\n          declared_preferences: user.generi_preferiti || []\n        };\n      } catch (mlError) {\n        console.warn('ML endpoints not available, usando fallback:', mlError);\n        // Fallback: crea dati fittizi per evitare errori\n        recommendations = [];\n        userStats = {\n          total_votes: 0,\n          average_rating: 0,\n          declared_preferences: user.generi_preferiti || []\n        };\n      }\n      setRecommendations(recommendations);\n      setUserStats(userStats);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      // Imposta valori di default in caso di errore\n      setRecommendations([]);\n      setUserStats({\n        total_votes: 0,\n        average_rating: 0,\n        declared_preferences: user.generi_preferiti || []\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleRefresh = async () => {\n    setRefreshing(true);\n    try {\n      // Prova prima le raccomandazioni ML\n      const modelStatus = await recommendationsAPI.getModelStatus();\n      let recommendations = [];\n      if (modelStatus.data.is_trained) {\n        const mlRecsResponse = await recommendationsAPI.getRecommendations(user.id, 20);\n        recommendations = mlRecsResponse.data.map(rec => ({\n          id: rec.tmdb_id,\n          title: rec.title,\n          genres: rec.genres.join('|'),\n          poster_path: rec.poster_url ? rec.poster_url.replace('https://image.tmdb.org/t/p/w500', '') : null,\n          vote_average: rec.tmdb_rating || 0,\n          popularity: rec.predicted_rating * 20,\n          recommendation_score: rec.predicted_rating\n        }));\n      } else {\n        const popularResponse = await recommendationsAPI.getPopularRecommendations(20);\n        recommendations = popularResponse.data.map(rec => ({\n          id: rec.tmdb_id,\n          title: rec.title,\n          genres: rec.genres.join('|'),\n          poster_path: rec.poster_url ? rec.poster_url.replace('https://image.tmdb.org/t/p/w500', '') : null,\n          vote_average: rec.tmdb_rating || 0,\n          popularity: rec.predicted_rating * 20,\n          recommendation_score: rec.predicted_rating\n        }));\n      }\n      setRecommendations(recommendations);\n    } catch (error) {\n      console.error('Error refreshing recommendations:', error);\n    } finally {\n      setRefreshing(false);\n    }\n  };\n  const handleMovieRating = async (movie, rating) => {\n    try {\n      // Gestisci genres come stringa o array\n      let genresList = [];\n      if (movie.genres) {\n        if (typeof movie.genres === 'string') {\n          genresList = movie.genres.split('|');\n        } else if (Array.isArray(movie.genres)) {\n          genresList = movie.genres.map(g => typeof g === 'string' ? g : g.name);\n        }\n      }\n      const voteData = {\n        tmdb_id: movie.id,\n        rating: rating,\n        title: movie.title,\n        genres: genresList,\n        poster_path: movie.poster_path || null,\n        release_date: movie.release_date || \"2023-01-01\",\n        tmdb_rating: movie.vote_average || 0.0\n      };\n      console.log('üîç Dati voto da inviare:', JSON.stringify(voteData, null, 2));\n      await ratingsAPI.voteMovie(user.id, voteData);\n      console.log(`‚úÖ Voto salvato: ${movie.title} - ${rating} stelle`);\n\n      // Refresh recommendations after rating\n      handleRefresh();\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data, _error$response3, _error$response3$data, _error$response3$data2, _error$response3$data3;\n      console.error('‚ùå Error rating movie:', error);\n      console.error('‚ùå Error details:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.detail) {\n        console.error('‚ùå Detailed validation errors:', error.response.data.detail);\n        error.response.data.detail.forEach((err, index) => {\n          console.error(`‚ùå Validation Error ${index + 1}:`, err);\n        });\n      }\n      alert('Errore durante la valutazione del film: ' + (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : (_error$response3$data2 = _error$response3$data.detail) === null || _error$response3$data2 === void 0 ? void 0 : (_error$response3$data3 = _error$response3$data2[0]) === null || _error$response3$data3 === void 0 ? void 0 : _error$response3$data3.msg) || error.message));\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(DashboardContainer, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(DashboardContainer, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(WelcomeSection, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          style: {\n            color: 'white',\n            marginBottom: '0.5rem'\n          },\n          children: [\"Benvenuto, \", user.username, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          style: {\n            color: 'rgba(255,255,255,0.9)',\n            fontSize: '1.1rem'\n          },\n          children: \"Ecco i film consigliati per te basati sui tuoi gusti\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), userStats && /*#__PURE__*/_jsxDEV(StatsSection, {\n        children: [/*#__PURE__*/_jsxDEV(StatCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon\",\n            children: /*#__PURE__*/_jsxDEV(FaFilm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"number\",\n            children: userStats.total_votes || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Film Votati\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon\",\n            children: /*#__PURE__*/_jsxDEV(FaStar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"number\",\n            children: userStats.average_rating || '0.0'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Voto Medio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon\",\n            children: /*#__PURE__*/_jsxDEV(FaHeart, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"number\",\n            children: userStats.high_rated_movies || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Film Amati (4-5\\u2605)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon\",\n            children: /*#__PURE__*/_jsxDEV(FaSync, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"number\",\n            children: recommendations.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Nuovi Consigli\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        children: [/*#__PURE__*/_jsxDEV(RecommendationsHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Subtitle, {\n              children: \"I tuoi film consigliati\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              style: {\n                marginTop: '0.5rem'\n              },\n              children: \"Basati sui tuoi generi preferiti e voti precedenti\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleRefresh,\n            disabled: refreshing,\n            children: [/*#__PURE__*/_jsxDEV(FaSync, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), refreshing ? 'Aggiornamento...' : 'Aggiorna']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), (userStats === null || userStats === void 0 ? void 0 : userStats.declared_preferences) && /*#__PURE__*/_jsxDEV(FilterSection, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            style: {\n              marginRight: '1rem'\n            },\n            children: \"I tuoi generi:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), userStats.declared_preferences.map(genre => /*#__PURE__*/_jsxDEV(Badge, {\n            children: genre\n          }, genre, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), recommendations.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n          children: recommendations.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n            movie: movie,\n            showRating: true,\n            onRate: handleMovieRating\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            padding: '3rem 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: \"Nessuna raccomandazione disponibile al momento.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleRefresh,\n            style: {\n              marginTop: '1rem'\n            },\n            children: \"Riprova\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"He4Xpv1F83K5tYAz3yD21jqIN2M=\");\n_c7 = DashboardPage;\nexport default DashboardPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"DashboardContainer\");\n$RefreshReg$(_c2, \"WelcomeSection\");\n$RefreshReg$(_c3, \"StatsSection\");\n$RefreshReg$(_c4, \"StatCard\");\n$RefreshReg$(_c5, \"FilterSection\");\n$RefreshReg$(_c6, \"RecommendationsHeader\");\n$RefreshReg$(_c7, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","styled","Container","Section","Title","Subtitle","Text","Button","Grid","LoadingSpinner","Flex","Badge","MovieCard","recommendationsAPI","ratingsAPI","FaSync","FaStar","FaFilm","FaHeart","jsxDEV","_jsxDEV","DashboardContainer","div","props","theme","colors","background","spacing","xl","_c","WelcomeSection","primary","primaryLight","textWhite","borderRadius","_c2","StatsSection","lg","_c3","StatCard","surface","boxShadow","base","fontSize","secondary","sm","fontWeight","bold","xs","_c4","FilterSection","md","_c5","RecommendationsHeader","_c6","DashboardPage","user","_s","recommendations","setRecommendations","userStats","setUserStats","loading","setLoading","refreshing","setRefreshing","fetchData","modelStatus","getModelStatus","data","is_trained","mlRecsResponse","getRecommendations","id","map","rec","tmdb_id","title","genres","join","poster_path","poster_url","replace","vote_average","tmdb_rating","popularity","predicted_rating","recommendation_score","popularResponse","getPopularRecommendations","historyResponse","getUserHistory","total_votes","length","average_rating","reduce","sum","item","rating","declared_preferences","generi_preferiti","mlError","console","warn","error","handleRefresh","handleMovieRating","movie","genresList","split","Array","isArray","g","name","voteData","release_date","log","JSON","stringify","voteMovie","_error$response","_error$response2","_error$response2$data","_error$response3","_error$response3$data","_error$response3$data2","_error$response3$data3","response","detail","forEach","err","index","alert","msg","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginBottom","username","className","high_rated_movies","marginTop","variant","onClick","disabled","marginRight","genre","showRating","onRate","textAlign","padding","_c7","$RefreshReg$"],"sources":["C:/Users/aless/Desktop/Da_zero/fastApiProject/frontend/src/pages/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Section, Title, Subtitle, Text, Button, Grid, LoadingSpinner, Flex, Badge } from '../styles/components';\r\nimport MovieCard from '../components/MovieCard';\r\nimport { recommendationsAPI, ratingsAPI } from '../services/api';\r\nimport { FaSync, FaStar, FaFilm, FaHeart } from 'react-icons/fa';\r\n\r\nconst DashboardContainer = styled.div`\r\n  min-height: calc(100vh - 80px);\r\n  background: ${props => props.theme.colors.background};\r\n  padding: ${props => props.theme.spacing.xl} 0;\r\n`;\r\n\r\nconst WelcomeSection = styled.div`\r\n  background: linear-gradient(135deg, ${props => props.theme.colors.primary}, ${props => props.theme.colors.primaryLight});\r\n  color: ${props => props.theme.colors.textWhite};\r\n  padding: ${props => props.theme.spacing.xl};\r\n  border-radius: ${props => props.theme.borderRadius.xl};\r\n  margin-bottom: ${props => props.theme.spacing.xl};\r\n  text-align: center;\r\n`;\r\n\r\nconst StatsSection = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: ${props => props.theme.spacing.lg};\r\n  margin-bottom: ${props => props.theme.spacing.xl};\r\n`;\r\n\r\nconst StatCard = styled.div`\r\n  background: ${props => props.theme.colors.surface};\r\n  padding: ${props => props.theme.spacing.lg};\r\n  border-radius: ${props => props.theme.borderRadius.lg};\r\n  box-shadow: ${props => props.theme.boxShadow.base};\r\n  text-align: center;\r\n  \r\n  .icon {\r\n    font-size: ${props => props.theme.fontSize['2xl']};\r\n    color: ${props => props.theme.colors.secondary};\r\n    margin-bottom: ${props => props.theme.spacing.sm};\r\n  }\r\n  \r\n  .number {\r\n    font-size: ${props => props.theme.fontSize['2xl']};\r\n    font-weight: ${props => props.theme.fontWeight.bold};\r\n    color: ${props => props.theme.colors.primary};\r\n    margin-bottom: ${props => props.theme.spacing.xs};\r\n  }\r\n`;\r\n\r\nconst FilterSection = styled(Flex)`\r\n  margin-bottom: ${props => props.theme.spacing.lg};\r\n  flex-wrap: wrap;\r\n  gap: ${props => props.theme.spacing.md};\r\n`;\r\n\r\nconst RecommendationsHeader = styled(Flex)`\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: ${props => props.theme.spacing.lg};\r\n  flex-wrap: wrap;\r\n  gap: ${props => props.theme.spacing.md};\r\n`;\r\n\r\nconst DashboardPage = ({ user }) => {\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [userStats, setUserStats] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      // Prova prima a ottenere raccomandazioni ML\r\n      let recommendations = [];\r\n      let userStats = {};\r\n      \r\n      try {\r\n        // Controlla stato del modello ML\r\n        const modelStatus = await recommendationsAPI.getModelStatus();\r\n        \r\n        if (modelStatus.data.is_trained) {\r\n          // Usa raccomandazioni ML se il modello √® addestrato\r\n          const mlRecsResponse = await recommendationsAPI.getRecommendations(user.id, 20);\r\n          recommendations = mlRecsResponse.data.map(rec => ({\r\n            id: rec.tmdb_id,\r\n            title: rec.title,\r\n            genres: rec.genres.join('|'), // Converti da array a stringa per compatibilit√†\r\n            poster_path: rec.poster_url ? rec.poster_url.replace('https://image.tmdb.org/t/p/w500', '') : null,\r\n            vote_average: rec.tmdb_rating || 0,\r\n            popularity: rec.predicted_rating * 20, // Scala il rating predetto\r\n            recommendation_score: rec.predicted_rating\r\n          }));\r\n        } else {\r\n          // Fallback su raccomandazioni popolari\r\n          const popularResponse = await recommendationsAPI.getPopularRecommendations(20);\r\n          recommendations = popularResponse.data.map(rec => ({\r\n            id: rec.tmdb_id,\r\n            title: rec.title,\r\n            genres: rec.genres.join('|'),\r\n            poster_path: rec.poster_url ? rec.poster_url.replace('https://image.tmdb.org/t/p/w500', '') : null,\r\n            vote_average: rec.tmdb_rating || 0,\r\n            popularity: rec.predicted_rating * 20,\r\n            recommendation_score: rec.predicted_rating\r\n          }));\r\n        }\r\n        \r\n        // Ottieni storico utente per statistiche\r\n        const historyResponse = await recommendationsAPI.getUserHistory(user.id);\r\n        userStats = {\r\n          total_votes: historyResponse.data.length,\r\n          average_rating: historyResponse.data.length > 0 \r\n            ? historyResponse.data.reduce((sum, item) => sum + item.rating, 0) / historyResponse.data.length \r\n            : 0,\r\n          declared_preferences: user.generi_preferiti || []\r\n        };\r\n        \r\n      } catch (mlError) {\r\n        console.warn('ML endpoints not available, usando fallback:', mlError);\r\n        // Fallback: crea dati fittizi per evitare errori\r\n        recommendations = [];\r\n        userStats = {\r\n          total_votes: 0,\r\n          average_rating: 0,\r\n          declared_preferences: user.generi_preferiti || []\r\n        };\r\n      }\r\n      \r\n      setRecommendations(recommendations);\r\n      setUserStats(userStats);\r\n      \r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      // Imposta valori di default in caso di errore\r\n      setRecommendations([]);\r\n      setUserStats({\r\n        total_votes: 0,\r\n        average_rating: 0,\r\n        declared_preferences: user.generi_preferiti || []\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    setRefreshing(true);\r\n    try {\r\n      // Prova prima le raccomandazioni ML\r\n      const modelStatus = await recommendationsAPI.getModelStatus();\r\n      \r\n      let recommendations = [];\r\n      if (modelStatus.data.is_trained) {\r\n        const mlRecsResponse = await recommendationsAPI.getRecommendations(user.id, 20);\r\n        recommendations = mlRecsResponse.data.map(rec => ({\r\n          id: rec.tmdb_id,\r\n          title: rec.title,\r\n          genres: rec.genres.join('|'),\r\n          poster_path: rec.poster_url ? rec.poster_url.replace('https://image.tmdb.org/t/p/w500', '') : null,\r\n          vote_average: rec.tmdb_rating || 0,\r\n          popularity: rec.predicted_rating * 20,\r\n          recommendation_score: rec.predicted_rating\r\n        }));\r\n      } else {\r\n        const popularResponse = await recommendationsAPI.getPopularRecommendations(20);\r\n        recommendations = popularResponse.data.map(rec => ({\r\n          id: rec.tmdb_id,\r\n          title: rec.title,\r\n          genres: rec.genres.join('|'),\r\n          poster_path: rec.poster_url ? rec.poster_url.replace('https://image.tmdb.org/t/p/w500', '') : null,\r\n          vote_average: rec.tmdb_rating || 0,\r\n          popularity: rec.predicted_rating * 20,\r\n          recommendation_score: rec.predicted_rating\r\n        }));\r\n      }\r\n      \r\n      setRecommendations(recommendations);\r\n    } catch (error) {\r\n      console.error('Error refreshing recommendations:', error);\r\n    } finally {\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  const handleMovieRating = async (movie, rating) => {\r\n    try {\r\n      // Gestisci genres come stringa o array\r\n      let genresList = [];\r\n      if (movie.genres) {\r\n        if (typeof movie.genres === 'string') {\r\n          genresList = movie.genres.split('|');\r\n        } else if (Array.isArray(movie.genres)) {\r\n          genresList = movie.genres.map(g => typeof g === 'string' ? g : g.name);\r\n        }\r\n      }\r\n      \r\n      const voteData = {\r\n        tmdb_id: movie.id,\r\n        rating: rating,\r\n        title: movie.title,\r\n        genres: genresList,\r\n        poster_path: movie.poster_path || null,\r\n        release_date: movie.release_date || \"2023-01-01\",\r\n        tmdb_rating: movie.vote_average || 0.0\r\n      };\r\n      \r\n      console.log('üîç Dati voto da inviare:', JSON.stringify(voteData, null, 2));\r\n      \r\n      await ratingsAPI.voteMovie(user.id, voteData);\r\n      \r\n      console.log(`‚úÖ Voto salvato: ${movie.title} - ${rating} stelle`);\r\n      \r\n      // Refresh recommendations after rating\r\n      handleRefresh();\r\n    } catch (error) {\r\n      console.error('‚ùå Error rating movie:', error);\r\n      console.error('‚ùå Error details:', error.response?.data);\r\n      if (error.response?.data?.detail) {\r\n        console.error('‚ùå Detailed validation errors:', error.response.data.detail);\r\n        error.response.data.detail.forEach((err, index) => {\r\n          console.error(`‚ùå Validation Error ${index + 1}:`, err);\r\n        });\r\n      }\r\n      alert('Errore durante la valutazione del film: ' + (error.response?.data?.detail?.[0]?.msg || error.message));\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <DashboardContainer>\r\n        <Container>\r\n          <LoadingSpinner />\r\n        </Container>\r\n      </DashboardContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DashboardContainer>\r\n      <Container>\r\n        <WelcomeSection>\r\n          <Title style={{ color: 'white', marginBottom: '0.5rem' }}>\r\n            Benvenuto, {user.username}!\r\n          </Title>\r\n          <Text style={{ color: 'rgba(255,255,255,0.9)', fontSize: '1.1rem' }}>\r\n            Ecco i film consigliati per te basati sui tuoi gusti\r\n          </Text>\r\n        </WelcomeSection>\r\n\r\n        {userStats && (\r\n          <StatsSection>\r\n            <StatCard>\r\n              <div className=\"icon\"><FaFilm /></div>\r\n              <div className=\"number\">{userStats.total_votes || 0}</div>\r\n              <Text>Film Votati</Text>\r\n            </StatCard>\r\n            <StatCard>\r\n              <div className=\"icon\"><FaStar /></div>\r\n              <div className=\"number\">{userStats.average_rating || '0.0'}</div>\r\n              <Text>Voto Medio</Text>\r\n            </StatCard>\r\n            <StatCard>\r\n              <div className=\"icon\"><FaHeart /></div>\r\n              <div className=\"number\">{userStats.high_rated_movies || 0}</div>\r\n              <Text>Film Amati (4-5‚òÖ)</Text>\r\n            </StatCard>\r\n            <StatCard>\r\n              <div className=\"icon\"><FaSync /></div>\r\n              <div className=\"number\">{recommendations.length}</div>\r\n              <Text>Nuovi Consigli</Text>\r\n            </StatCard>\r\n          </StatsSection>\r\n        )}\r\n\r\n        <Section>\r\n          <RecommendationsHeader>\r\n            <div>\r\n              <Subtitle>I tuoi film consigliati</Subtitle>\r\n              <Text style={{ marginTop: '0.5rem' }}>\r\n                Basati sui tuoi generi preferiti e voti precedenti\r\n              </Text>\r\n            </div>\r\n            <Button\r\n              variant=\"secondary\"\r\n              onClick={handleRefresh}\r\n              disabled={refreshing}\r\n            >\r\n              <FaSync />\r\n              {refreshing ? 'Aggiornamento...' : 'Aggiorna'}\r\n            </Button>\r\n          </RecommendationsHeader>\r\n\r\n          {userStats?.declared_preferences && (\r\n            <FilterSection>\r\n              <Text style={{ marginRight: '1rem' }}>I tuoi generi:</Text>\r\n              {userStats.declared_preferences.map(genre => (\r\n                <Badge key={genre}>{genre}</Badge>\r\n              ))}\r\n            </FilterSection>\r\n          )}\r\n\r\n          {recommendations.length > 0 ? (\r\n            <Grid>\r\n              {recommendations.map(movie => (\r\n                <MovieCard\r\n                  key={movie.id}\r\n                  movie={movie}\r\n                  showRating={true}\r\n                  onRate={handleMovieRating}\r\n                />\r\n              ))}\r\n            </Grid>\r\n          ) : (\r\n            <div style={{ textAlign: 'center', padding: '3rem 0' }}>\r\n              <Text>Nessuna raccomandazione disponibile al momento.</Text>\r\n              <Button \r\n                variant=\"primary\" \r\n                onClick={handleRefresh}\r\n                style={{ marginTop: '1rem' }}\r\n              >\r\n                Riprova\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </Section>\r\n      </Container>\r\n    </DashboardContainer>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
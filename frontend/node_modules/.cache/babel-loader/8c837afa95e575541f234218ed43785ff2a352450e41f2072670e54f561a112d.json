{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aless\\\\Desktop\\\\Da_zero\\\\fastApiProject\\\\frontend\\\\src\\\\components\\\\ClusteringChart.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartContainer = styled.div`\n  width: 100%;\n  height: 400px;\n  margin: 20px 0;\n  background: ${props => props.theme.colors.secondary};\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: ${props => props.theme.boxShadow.medium};\n`;\n_c = ChartContainer;\nconst SVGChart = styled.svg`\n  width: 100%;\n  height: 100%;\n  background: ${props => props.theme.colors.primary};\n  border-radius: 8px;\n`;\n_c2 = SVGChart;\nconst ChartTitle = styled.h3`\n  color: ${props => props.theme.colors.text};\n  margin-bottom: 15px;\n  text-align: center;\n`;\n_c3 = ChartTitle;\nconst Legend = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 15px;\n  margin-top: 15px;\n`;\n_c4 = Legend;\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  color: ${props => props.theme.colors.text};\n  font-size: 14px;\n`;\n_c5 = LegendItem;\nconst LegendColor = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: ${props => props.color};\n`;\n\n// Colori per i cluster\n_c6 = LegendColor;\nconst CLUSTER_COLORS = ['#FF6B6B',\n// Rosso\n'#4ECDC4',\n// Turchese  \n'#45B7D1',\n// Blu\n'#96CEB4',\n// Verde\n'#FFEAA7',\n// Giallo\n'#DDA0DD',\n// Lavanda\n'#FFB347',\n// Arancione\n'#98D8C8' // Verde acqua\n];\nconst ClusteringChart = ({\n  data\n}) => {\n  if (!data || !data.points || data.points.length === 0) {\n    return /*#__PURE__*/_jsxDEV(ChartContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ChartTitle, {\n        children: \"\\uD83D\\uDCCA Clustering dei Film\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          color: '#666',\n          padding: '50px'\n        },\n        children: \"Nessun dato di clustering disponibile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Calcola i limiti del grafico\n  const xValues = data.points.map(p => p.x);\n  const yValues = data.points.map(p => p.y);\n  const minX = Math.min(...xValues);\n  const maxX = Math.max(...xValues);\n  const minY = Math.min(...yValues);\n  const maxY = Math.max(...yValues);\n\n  // Aggiungi margini\n  const marginX = (maxX - minX) * 0.1;\n  const marginY = (maxY - minY) * 0.1;\n  const chartMinX = minX - marginX;\n  const chartMaxX = maxX + marginX;\n  const chartMinY = minY - marginY;\n  const chartMaxY = maxY + marginY;\n\n  // Dimensioni del grafico\n  const chartWidth = 500;\n  const chartHeight = 300;\n  const padding = 40;\n\n  // Funzioni di scaling\n  const scaleX = x => padding + (x - chartMinX) / (chartMaxX - chartMinX) * (chartWidth - 2 * padding);\n  const scaleY = y => chartHeight - padding - (y - chartMinY) / (chartMaxY - chartMinY) * (chartHeight - 2 * padding);\n\n  // Raggruppa punti per cluster\n  const clusters = {};\n  data.points.forEach(point => {\n    if (!clusters[point.cluster]) {\n      clusters[point.cluster] = [];\n    }\n    clusters[point.cluster].push(point);\n  });\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ChartTitle, {\n      children: \"\\uD83D\\uDCCA Clustering dei Film nello Spazio Latente SVD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SVGChart, {\n      viewBox: `0 0 ${chartWidth} ${chartHeight}`,\n      children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"pattern\", {\n          id: \"grid\",\n          width: \"40\",\n          height: \"40\",\n          patternUnits: \"userSpaceOnUse\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M 40 0 L 0 0 0 40\",\n            fill: \"none\",\n            stroke: \"#333\",\n            strokeWidth: \"0.5\",\n            opacity: \"0.3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n        width: \"100%\",\n        height: \"100%\",\n        fill: \"url(#grid)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: padding,\n        y1: chartHeight - padding,\n        x2: chartWidth - padding,\n        y2: chartHeight - padding,\n        stroke: \"#666\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: padding,\n        y1: padding,\n        x2: padding,\n        y2: chartHeight - padding,\n        stroke: \"#666\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: chartWidth / 2,\n        y: chartHeight - 10,\n        textAnchor: \"middle\",\n        fill: \"#888\",\n        fontSize: \"12\",\n        children: \"Componente SVD 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: 15,\n        y: chartHeight / 2,\n        textAnchor: \"middle\",\n        fill: \"#888\",\n        fontSize: \"12\",\n        transform: `rotate(-90, 15, ${chartHeight / 2})`,\n        children: \"Componente SVD 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), data.centroids && data.centroids.map((centroid, index) => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: scaleX(centroid.x),\n          cy: scaleY(centroid.y),\n          r: \"8\",\n          fill: CLUSTER_COLORS[index % CLUSTER_COLORS.length],\n          stroke: \"#000\",\n          strokeWidth: \"2\",\n          opacity: \"0.8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: scaleX(centroid.x),\n          y: scaleY(centroid.y),\n          textAnchor: \"middle\",\n          dy: \"0.3em\",\n          fill: \"#000\",\n          fontSize: \"10\",\n          fontWeight: \"bold\",\n          children: [\"C\", index]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, `centroid-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)), data.points.map((point, index) => /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: scaleX(point.x),\n        cy: scaleY(point.y),\n        r: \"4\",\n        fill: CLUSTER_COLORS[point.cluster % CLUSTER_COLORS.length],\n        stroke: \"#fff\",\n        strokeWidth: \"1\",\n        opacity: \"0.7\",\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: [\"Film #\", index, \" - Cluster \", point.cluster]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)\n      }, `point-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      children: [Object.keys(clusters).map(clusterId => /*#__PURE__*/_jsxDEV(LegendItem, {\n        children: [/*#__PURE__*/_jsxDEV(LegendColor, {\n          color: CLUSTER_COLORS[parseInt(clusterId) % CLUSTER_COLORS.length]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), \"Cluster \", clusterId, \" (\", clusters[clusterId].length, \" film)\"]\n      }, clusterId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)), data.centroids && /*#__PURE__*/_jsxDEV(LegendItem, {\n        children: [/*#__PURE__*/_jsxDEV(LegendColor, {\n          color: \"#000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), \"Centroidi\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_c7 = ClusteringChart;\nexport default ClusteringChart;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"ChartContainer\");\n$RefreshReg$(_c2, \"SVGChart\");\n$RefreshReg$(_c3, \"ChartTitle\");\n$RefreshReg$(_c4, \"Legend\");\n$RefreshReg$(_c5, \"LegendItem\");\n$RefreshReg$(_c6, \"LegendColor\");\n$RefreshReg$(_c7, \"ClusteringChart\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","ChartContainer","div","props","theme","colors","secondary","boxShadow","medium","_c","SVGChart","svg","primary","_c2","ChartTitle","h3","text","_c3","Legend","_c4","LegendItem","_c5","LegendColor","color","_c6","CLUSTER_COLORS","ClusteringChart","data","points","length","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","padding","xValues","map","p","x","yValues","y","minX","Math","min","maxX","max","minY","maxY","marginX","marginY","chartMinX","chartMaxX","chartMinY","chartMaxY","chartWidth","chartHeight","scaleX","scaleY","clusters","forEach","point","cluster","push","viewBox","id","width","height","patternUnits","d","fill","stroke","strokeWidth","opacity","x1","y1","x2","y2","textAnchor","fontSize","transform","centroids","centroid","index","cx","cy","r","dy","fontWeight","Object","keys","clusterId","parseInt","_c7","$RefreshReg$"],"sources":["C:/Users/aless/Desktop/Da_zero/fastApiProject/frontend/src/components/ClusteringChart.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ChartContainer = styled.div`\r\n  width: 100%;\r\n  height: 400px;\r\n  margin: 20px 0;\r\n  background: ${props => props.theme.colors.secondary};\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  box-shadow: ${props => props.theme.boxShadow.medium};\r\n`;\r\n\r\nconst SVGChart = styled.svg`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${props => props.theme.colors.primary};\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst ChartTitle = styled.h3`\r\n  color: ${props => props.theme.colors.text};\r\n  margin-bottom: 15px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Legend = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst LegendItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  color: ${props => props.theme.colors.text};\r\n  font-size: 14px;\r\n`;\r\n\r\nconst LegendColor = styled.div`\r\n  width: 12px;\r\n  height: 12px;\r\n  border-radius: 50%;\r\n  background: ${props => props.color};\r\n`;\r\n\r\n// Colori per i cluster\r\nconst CLUSTER_COLORS = [\r\n  '#FF6B6B', // Rosso\r\n  '#4ECDC4', // Turchese  \r\n  '#45B7D1', // Blu\r\n  '#96CEB4', // Verde\r\n  '#FFEAA7', // Giallo\r\n  '#DDA0DD', // Lavanda\r\n  '#FFB347', // Arancione\r\n  '#98D8C8'  // Verde acqua\r\n];\r\n\r\nconst ClusteringChart = ({ data }) => {\r\n  if (!data || !data.points || data.points.length === 0) {\r\n    return (\r\n      <ChartContainer>\r\n        <ChartTitle>📊 Clustering dei Film</ChartTitle>\r\n        <div style={{ textAlign: 'center', color: '#666', padding: '50px' }}>\r\n          Nessun dato di clustering disponibile\r\n        </div>\r\n      </ChartContainer>\r\n    );\r\n  }\r\n\r\n  // Calcola i limiti del grafico\r\n  const xValues = data.points.map(p => p.x);\r\n  const yValues = data.points.map(p => p.y);\r\n  const minX = Math.min(...xValues);\r\n  const maxX = Math.max(...xValues);\r\n  const minY = Math.min(...yValues);\r\n  const maxY = Math.max(...yValues);\r\n  \r\n  // Aggiungi margini\r\n  const marginX = (maxX - minX) * 0.1;\r\n  const marginY = (maxY - minY) * 0.1;\r\n  const chartMinX = minX - marginX;\r\n  const chartMaxX = maxX + marginX;\r\n  const chartMinY = minY - marginY;\r\n  const chartMaxY = maxY + marginY;\r\n\r\n  // Dimensioni del grafico\r\n  const chartWidth = 500;\r\n  const chartHeight = 300;\r\n  const padding = 40;\r\n\r\n  // Funzioni di scaling\r\n  const scaleX = (x) => padding + ((x - chartMinX) / (chartMaxX - chartMinX)) * (chartWidth - 2 * padding);\r\n  const scaleY = (y) => chartHeight - padding - ((y - chartMinY) / (chartMaxY - chartMinY)) * (chartHeight - 2 * padding);\r\n\r\n  // Raggruppa punti per cluster\r\n  const clusters = {};\r\n  data.points.forEach(point => {\r\n    if (!clusters[point.cluster]) {\r\n      clusters[point.cluster] = [];\r\n    }\r\n    clusters[point.cluster].push(point);\r\n  });\r\n\r\n  return (\r\n    <ChartContainer>\r\n      <ChartTitle>📊 Clustering dei Film nello Spazio Latente SVD</ChartTitle>\r\n      \r\n      <SVGChart viewBox={`0 0 ${chartWidth} ${chartHeight}`}>\r\n        {/* Griglia di sfondo */}\r\n        <defs>\r\n          <pattern id=\"grid\" width=\"40\" height=\"40\" patternUnits=\"userSpaceOnUse\">\r\n            <path d=\"M 40 0 L 0 0 0 40\" fill=\"none\" stroke=\"#333\" strokeWidth=\"0.5\" opacity=\"0.3\"/>\r\n          </pattern>\r\n        </defs>\r\n        <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\r\n        \r\n        {/* Assi */}\r\n        <line \r\n          x1={padding} \r\n          y1={chartHeight - padding} \r\n          x2={chartWidth - padding} \r\n          y2={chartHeight - padding} \r\n          stroke=\"#666\" \r\n          strokeWidth=\"2\"\r\n        />\r\n        <line \r\n          x1={padding} \r\n          y1={padding} \r\n          x2={padding} \r\n          y2={chartHeight - padding} \r\n          stroke=\"#666\" \r\n          strokeWidth=\"2\"\r\n        />\r\n        \r\n        {/* Etichette assi */}\r\n        <text \r\n          x={chartWidth / 2} \r\n          y={chartHeight - 10} \r\n          textAnchor=\"middle\" \r\n          fill=\"#888\" \r\n          fontSize=\"12\"\r\n        >\r\n          Componente SVD 1\r\n        </text>\r\n        <text \r\n          x={15} \r\n          y={chartHeight / 2} \r\n          textAnchor=\"middle\" \r\n          fill=\"#888\" \r\n          fontSize=\"12\" \r\n          transform={`rotate(-90, 15, ${chartHeight / 2})`}\r\n        >\r\n          Componente SVD 2\r\n        </text>\r\n\r\n        {/* Centroidi (se disponibili) */}\r\n        {data.centroids && data.centroids.map((centroid, index) => (\r\n          <g key={`centroid-${index}`}>\r\n            <circle\r\n              cx={scaleX(centroid.x)}\r\n              cy={scaleY(centroid.y)}\r\n              r=\"8\"\r\n              fill={CLUSTER_COLORS[index % CLUSTER_COLORS.length]}\r\n              stroke=\"#000\"\r\n              strokeWidth=\"2\"\r\n              opacity=\"0.8\"\r\n            />\r\n            <text\r\n              x={scaleX(centroid.x)}\r\n              y={scaleY(centroid.y)}\r\n              textAnchor=\"middle\"\r\n              dy=\"0.3em\"\r\n              fill=\"#000\"\r\n              fontSize=\"10\"\r\n              fontWeight=\"bold\"\r\n            >\r\n              C{index}\r\n            </text>\r\n          </g>\r\n        ))}\r\n\r\n        {/* Punti dei film */}\r\n        {data.points.map((point, index) => (\r\n          <circle\r\n            key={`point-${index}`}\r\n            cx={scaleX(point.x)}\r\n            cy={scaleY(point.y)}\r\n            r=\"4\"\r\n            fill={CLUSTER_COLORS[point.cluster % CLUSTER_COLORS.length]}\r\n            stroke=\"#fff\"\r\n            strokeWidth=\"1\"\r\n            opacity=\"0.7\"\r\n          >\r\n            <title>Film #{index} - Cluster {point.cluster}</title>\r\n          </circle>\r\n        ))}\r\n      </SVGChart>\r\n\r\n      {/* Legenda */}\r\n      <Legend>\r\n        {Object.keys(clusters).map(clusterId => (\r\n          <LegendItem key={clusterId}>\r\n            <LegendColor color={CLUSTER_COLORS[parseInt(clusterId) % CLUSTER_COLORS.length]} />\r\n            Cluster {clusterId} ({clusters[clusterId].length} film)\r\n          </LegendItem>\r\n        ))}\r\n        {data.centroids && (\r\n          <LegendItem>\r\n            <LegendColor color=\"#000\" />\r\n            Centroidi\r\n          </LegendItem>\r\n        )}\r\n      </Legend>\r\n    </ChartContainer>\r\n  );\r\n};\r\n\r\nexport default ClusteringChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
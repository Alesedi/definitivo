{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aless\\\\Desktop\\\\Da_zero\\\\fastApiProject\\\\frontend\\\\src\\\\pages\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Container, Section, Title, Subtitle, Text, Button, Grid, LoadingSpinner, Flex, Badge } from '../styles/components';\nimport MovieCard from '../components/MovieCard';\nimport { recommendationsAPI, ratingsAPI } from '../services/api';\nimport { FaSync, FaStar, FaFilm, FaHeart } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContainer = styled.div`\n  min-height: calc(100vh - 80px);\n  background: ${props => props.theme.colors.background};\n  padding: ${props => props.theme.spacing.xl} 0;\n`;\n_c = DashboardContainer;\nconst WelcomeSection = styled.div`\n  background: linear-gradient(135deg, ${props => props.theme.colors.primary}, ${props => props.theme.colors.primaryLight});\n  color: ${props => props.theme.colors.textWhite};\n  padding: ${props => props.theme.spacing.xl};\n  border-radius: ${props => props.theme.borderRadius.xl};\n  margin-bottom: ${props => props.theme.spacing.xl};\n  text-align: center;\n`;\n_c2 = WelcomeSection;\nconst StatsSection = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${props => props.theme.spacing.lg};\n  margin-bottom: ${props => props.theme.spacing.xl};\n`;\n_c3 = StatsSection;\nconst StatCard = styled.div`\n  background: ${props => props.theme.colors.surface};\n  padding: ${props => props.theme.spacing.lg};\n  border-radius: ${props => props.theme.borderRadius.lg};\n  box-shadow: ${props => props.theme.boxShadow.base};\n  text-align: center;\n  \n  .icon {\n    font-size: ${props => props.theme.fontSize['2xl']};\n    color: ${props => props.theme.colors.secondary};\n    margin-bottom: ${props => props.theme.spacing.sm};\n  }\n  \n  .number {\n    font-size: ${props => props.theme.fontSize['2xl']};\n    font-weight: ${props => props.theme.fontWeight.bold};\n    color: ${props => props.theme.colors.primary};\n    margin-bottom: ${props => props.theme.spacing.xs};\n  }\n`;\n_c4 = StatCard;\nconst FilterSection = styled(Flex)`\n  margin-bottom: ${props => props.theme.spacing.lg};\n  flex-wrap: wrap;\n  gap: ${props => props.theme.spacing.md};\n`;\n_c5 = FilterSection;\nconst RecommendationsHeader = styled(Flex)`\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${props => props.theme.spacing.lg};\n  flex-wrap: wrap;\n  gap: ${props => props.theme.spacing.md};\n`;\n_c6 = RecommendationsHeader;\nconst DashboardPage = ({\n  user\n}) => {\n  _s();\n  const [recommendations, setRecommendations] = useState([]);\n  const [userStats, setUserStats] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const [recsResponse, statsResponse] = await Promise.all([recommendationsAPI.getRecommendations(user.id, 20), recommendationsAPI.getUserStats(user.id)]);\n      setRecommendations(recsResponse.data.recommendations);\n      setUserStats(statsResponse.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleRefresh = async () => {\n    setRefreshing(true);\n    try {\n      const response = await recommendationsAPI.getRecommendations(user.id, 20);\n      setRecommendations(response.data.recommendations);\n    } catch (error) {\n      console.error('Error refreshing recommendations:', error);\n    } finally {\n      setRefreshing(false);\n    }\n  };\n  const handleMovieRating = async (movie, rating) => {\n    try {\n      // Gestisci genres come stringa o array\n      let genresList = [];\n      if (movie.genres) {\n        if (typeof movie.genres === 'string') {\n          genresList = movie.genres.split('|');\n        } else if (Array.isArray(movie.genres)) {\n          genresList = movie.genres.map(g => typeof g === 'string' ? g : g.name);\n        }\n      }\n      const voteData = {\n        tmdb_id: movie.id,\n        rating: rating,\n        title: movie.title,\n        genres: genresList,\n        poster_path: movie.poster_path || null,\n        release_date: movie.release_date || \"2023-01-01\",\n        tmdb_rating: movie.vote_average || 0.0\n      };\n      console.log('üîç Dati voto da inviare:', JSON.stringify(voteData, null, 2));\n      await ratingsAPI.voteMovie(user.id, voteData);\n      console.log(`‚úÖ Voto salvato: ${movie.title} - ${rating} stelle`);\n\n      // Refresh recommendations after rating\n      handleRefresh();\n    } catch (error) {\n      var _error$response;\n      console.error('‚ùå Error rating movie:', error);\n      console.error('‚ùå Error details:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(DashboardContainer, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(DashboardContainer, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(WelcomeSection, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          style: {\n            color: 'white',\n            marginBottom: '0.5rem'\n          },\n          children: [\"Benvenuto, \", user.username, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          style: {\n            color: 'rgba(255,255,255,0.9)',\n            fontSize: '1.1rem'\n          },\n          children: \"Ecco i film consigliati per te basati sui tuoi gusti\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), userStats && /*#__PURE__*/_jsxDEV(StatsSection, {\n        children: [/*#__PURE__*/_jsxDEV(StatCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon\",\n            children: /*#__PURE__*/_jsxDEV(FaFilm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"number\",\n            children: userStats.total_votes || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Film Votati\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon\",\n            children: /*#__PURE__*/_jsxDEV(FaStar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"number\",\n            children: userStats.average_rating || '0.0'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Voto Medio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon\",\n            children: /*#__PURE__*/_jsxDEV(FaHeart, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"number\",\n            children: userStats.high_rated_movies || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Film Amati (4-5\\u2605)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon\",\n            children: /*#__PURE__*/_jsxDEV(FaSync, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"number\",\n            children: recommendations.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Nuovi Consigli\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        children: [/*#__PURE__*/_jsxDEV(RecommendationsHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Subtitle, {\n              children: \"I tuoi film consigliati\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              style: {\n                marginTop: '0.5rem'\n              },\n              children: \"Basati sui tuoi generi preferiti e voti precedenti\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleRefresh,\n            disabled: refreshing,\n            children: [/*#__PURE__*/_jsxDEV(FaSync, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), refreshing ? 'Aggiornamento...' : 'Aggiorna']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), (userStats === null || userStats === void 0 ? void 0 : userStats.declared_preferences) && /*#__PURE__*/_jsxDEV(FilterSection, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            style: {\n              marginRight: '1rem'\n            },\n            children: \"I tuoi generi:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), userStats.declared_preferences.map(genre => /*#__PURE__*/_jsxDEV(Badge, {\n            children: genre\n          }, genre, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), recommendations.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n          children: recommendations.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n            movie: movie,\n            showRating: true,\n            onRate: handleMovieRating\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            padding: '3rem 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: \"Nessuna raccomandazione disponibile al momento.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleRefresh,\n            style: {\n              marginTop: '1rem'\n            },\n            children: \"Riprova\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"He4Xpv1F83K5tYAz3yD21jqIN2M=\");\n_c7 = DashboardPage;\nexport default DashboardPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"DashboardContainer\");\n$RefreshReg$(_c2, \"WelcomeSection\");\n$RefreshReg$(_c3, \"StatsSection\");\n$RefreshReg$(_c4, \"StatCard\");\n$RefreshReg$(_c5, \"FilterSection\");\n$RefreshReg$(_c6, \"RecommendationsHeader\");\n$RefreshReg$(_c7, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","styled","Container","Section","Title","Subtitle","Text","Button","Grid","LoadingSpinner","Flex","Badge","MovieCard","recommendationsAPI","ratingsAPI","FaSync","FaStar","FaFilm","FaHeart","jsxDEV","_jsxDEV","DashboardContainer","div","props","theme","colors","background","spacing","xl","_c","WelcomeSection","primary","primaryLight","textWhite","borderRadius","_c2","StatsSection","lg","_c3","StatCard","surface","boxShadow","base","fontSize","secondary","sm","fontWeight","bold","xs","_c4","FilterSection","md","_c5","RecommendationsHeader","_c6","DashboardPage","user","_s","recommendations","setRecommendations","userStats","setUserStats","loading","setLoading","refreshing","setRefreshing","fetchData","recsResponse","statsResponse","Promise","all","getRecommendations","id","getUserStats","data","error","console","handleRefresh","response","handleMovieRating","movie","rating","genresList","genres","split","Array","isArray","map","g","name","voteData","tmdb_id","title","poster_path","release_date","tmdb_rating","vote_average","log","JSON","stringify","voteMovie","_error$response","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginBottom","username","className","total_votes","average_rating","high_rated_movies","length","marginTop","variant","onClick","disabled","declared_preferences","marginRight","genre","showRating","onRate","textAlign","padding","_c7","$RefreshReg$"],"sources":["C:/Users/aless/Desktop/Da_zero/fastApiProject/frontend/src/pages/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Section, Title, Subtitle, Text, Button, Grid, LoadingSpinner, Flex, Badge } from '../styles/components';\r\nimport MovieCard from '../components/MovieCard';\r\nimport { recommendationsAPI, ratingsAPI } from '../services/api';\r\nimport { FaSync, FaStar, FaFilm, FaHeart } from 'react-icons/fa';\r\n\r\nconst DashboardContainer = styled.div`\r\n  min-height: calc(100vh - 80px);\r\n  background: ${props => props.theme.colors.background};\r\n  padding: ${props => props.theme.spacing.xl} 0;\r\n`;\r\n\r\nconst WelcomeSection = styled.div`\r\n  background: linear-gradient(135deg, ${props => props.theme.colors.primary}, ${props => props.theme.colors.primaryLight});\r\n  color: ${props => props.theme.colors.textWhite};\r\n  padding: ${props => props.theme.spacing.xl};\r\n  border-radius: ${props => props.theme.borderRadius.xl};\r\n  margin-bottom: ${props => props.theme.spacing.xl};\r\n  text-align: center;\r\n`;\r\n\r\nconst StatsSection = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: ${props => props.theme.spacing.lg};\r\n  margin-bottom: ${props => props.theme.spacing.xl};\r\n`;\r\n\r\nconst StatCard = styled.div`\r\n  background: ${props => props.theme.colors.surface};\r\n  padding: ${props => props.theme.spacing.lg};\r\n  border-radius: ${props => props.theme.borderRadius.lg};\r\n  box-shadow: ${props => props.theme.boxShadow.base};\r\n  text-align: center;\r\n  \r\n  .icon {\r\n    font-size: ${props => props.theme.fontSize['2xl']};\r\n    color: ${props => props.theme.colors.secondary};\r\n    margin-bottom: ${props => props.theme.spacing.sm};\r\n  }\r\n  \r\n  .number {\r\n    font-size: ${props => props.theme.fontSize['2xl']};\r\n    font-weight: ${props => props.theme.fontWeight.bold};\r\n    color: ${props => props.theme.colors.primary};\r\n    margin-bottom: ${props => props.theme.spacing.xs};\r\n  }\r\n`;\r\n\r\nconst FilterSection = styled(Flex)`\r\n  margin-bottom: ${props => props.theme.spacing.lg};\r\n  flex-wrap: wrap;\r\n  gap: ${props => props.theme.spacing.md};\r\n`;\r\n\r\nconst RecommendationsHeader = styled(Flex)`\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: ${props => props.theme.spacing.lg};\r\n  flex-wrap: wrap;\r\n  gap: ${props => props.theme.spacing.md};\r\n`;\r\n\r\nconst DashboardPage = ({ user }) => {\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [userStats, setUserStats] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const [recsResponse, statsResponse] = await Promise.all([\r\n        recommendationsAPI.getRecommendations(user.id, 20),\r\n        recommendationsAPI.getUserStats(user.id)\r\n      ]);\r\n      \r\n      setRecommendations(recsResponse.data.recommendations);\r\n      setUserStats(statsResponse.data);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    setRefreshing(true);\r\n    try {\r\n      const response = await recommendationsAPI.getRecommendations(user.id, 20);\r\n      setRecommendations(response.data.recommendations);\r\n    } catch (error) {\r\n      console.error('Error refreshing recommendations:', error);\r\n    } finally {\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  const handleMovieRating = async (movie, rating) => {\r\n    try {\r\n      // Gestisci genres come stringa o array\r\n      let genresList = [];\r\n      if (movie.genres) {\r\n        if (typeof movie.genres === 'string') {\r\n          genresList = movie.genres.split('|');\r\n        } else if (Array.isArray(movie.genres)) {\r\n          genresList = movie.genres.map(g => typeof g === 'string' ? g : g.name);\r\n        }\r\n      }\r\n      \r\n      const voteData = {\r\n        tmdb_id: movie.id,\r\n        rating: rating,\r\n        title: movie.title,\r\n        genres: genresList,\r\n        poster_path: movie.poster_path || null,\r\n        release_date: movie.release_date || \"2023-01-01\",\r\n        tmdb_rating: movie.vote_average || 0.0\r\n      };\r\n      \r\n      console.log('üîç Dati voto da inviare:', JSON.stringify(voteData, null, 2));\r\n      \r\n      await ratingsAPI.voteMovie(user.id, voteData);\r\n      \r\n      console.log(`‚úÖ Voto salvato: ${movie.title} - ${rating} stelle`);\r\n      \r\n      // Refresh recommendations after rating\r\n      handleRefresh();\r\n    } catch (error) {\r\n      console.error('‚ùå Error rating movie:', error);\r\n      console.error('‚ùå Error details:', error.response?.data);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <DashboardContainer>\r\n        <Container>\r\n          <LoadingSpinner />\r\n        </Container>\r\n      </DashboardContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DashboardContainer>\r\n      <Container>\r\n        <WelcomeSection>\r\n          <Title style={{ color: 'white', marginBottom: '0.5rem' }}>\r\n            Benvenuto, {user.username}!\r\n          </Title>\r\n          <Text style={{ color: 'rgba(255,255,255,0.9)', fontSize: '1.1rem' }}>\r\n            Ecco i film consigliati per te basati sui tuoi gusti\r\n          </Text>\r\n        </WelcomeSection>\r\n\r\n        {userStats && (\r\n          <StatsSection>\r\n            <StatCard>\r\n              <div className=\"icon\"><FaFilm /></div>\r\n              <div className=\"number\">{userStats.total_votes || 0}</div>\r\n              <Text>Film Votati</Text>\r\n            </StatCard>\r\n            <StatCard>\r\n              <div className=\"icon\"><FaStar /></div>\r\n              <div className=\"number\">{userStats.average_rating || '0.0'}</div>\r\n              <Text>Voto Medio</Text>\r\n            </StatCard>\r\n            <StatCard>\r\n              <div className=\"icon\"><FaHeart /></div>\r\n              <div className=\"number\">{userStats.high_rated_movies || 0}</div>\r\n              <Text>Film Amati (4-5‚òÖ)</Text>\r\n            </StatCard>\r\n            <StatCard>\r\n              <div className=\"icon\"><FaSync /></div>\r\n              <div className=\"number\">{recommendations.length}</div>\r\n              <Text>Nuovi Consigli</Text>\r\n            </StatCard>\r\n          </StatsSection>\r\n        )}\r\n\r\n        <Section>\r\n          <RecommendationsHeader>\r\n            <div>\r\n              <Subtitle>I tuoi film consigliati</Subtitle>\r\n              <Text style={{ marginTop: '0.5rem' }}>\r\n                Basati sui tuoi generi preferiti e voti precedenti\r\n              </Text>\r\n            </div>\r\n            <Button\r\n              variant=\"secondary\"\r\n              onClick={handleRefresh}\r\n              disabled={refreshing}\r\n            >\r\n              <FaSync />\r\n              {refreshing ? 'Aggiornamento...' : 'Aggiorna'}\r\n            </Button>\r\n          </RecommendationsHeader>\r\n\r\n          {userStats?.declared_preferences && (\r\n            <FilterSection>\r\n              <Text style={{ marginRight: '1rem' }}>I tuoi generi:</Text>\r\n              {userStats.declared_preferences.map(genre => (\r\n                <Badge key={genre}>{genre}</Badge>\r\n              ))}\r\n            </FilterSection>\r\n          )}\r\n\r\n          {recommendations.length > 0 ? (\r\n            <Grid>\r\n              {recommendations.map(movie => (\r\n                <MovieCard\r\n                  key={movie.id}\r\n                  movie={movie}\r\n                  showRating={true}\r\n                  onRate={handleMovieRating}\r\n                />\r\n              ))}\r\n            </Grid>\r\n          ) : (\r\n            <div style={{ textAlign: 'center', padding: '3rem 0' }}>\r\n              <Text>Nessuna raccomandazione disponibile al momento.</Text>\r\n              <Button \r\n                variant=\"primary\" \r\n                onClick={handleRefresh}\r\n                style={{ marginTop: '1rem' }}\r\n              >\r\n                Riprova\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </Section>\r\n      </Container>\r\n    </DashboardContainer>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}